[tox]
envlist = py38-pytest-{linux, darwin, windows}

[testenv]
basepython = python3.8
deps =
allowlist_externals =
    poetry
    coverage
setenv =
    RUNTEST_CFG = {env:RUNTEST_CFG}
    RUNTEST_CFG_DEMO = {env:RUNTEST_CFG_DEMO}
commands =
    poetry install -E "all"
    coverage run --source=ayugespidertools -m pytest tests/test_items.py tests/test_formatdata.py tests/test_sqlformat.py tests/test_commands/test_commands_startproject.py tests/test_commands/test_commands_version.py tests/test_common/test_common_multiplexing.py tests/test_common/test_common_typevars.py tests/test_common/test_common_utils.py tests/test_extras/test_extras_cvnpil.py -k "not test_get_remote_kvs and not test_fetch_remote_conf and not test_normal_to_stamp"
    coverage combine
    coverage report
    coverage xml

[testenv:py38-pytest-linux]
description = Run pytest on Linux.
platform = linux
deps =
    {[testenv]deps}
setenv =
    RUNTEST_CFG = {env:RUNTEST_CFG}
    RUNTEST_CFG_DEMO = {env:RUNTEST_CFG_DEMO}
commands =
    {[testenv]commands}

[testenv:py38-pytest-darwin]
inherit_from = py38-pytest-linux
description = Run pytest on Darwin.
platform = darwin

[testenv:py38-pytest-windows]
description = Run pytest on Windows with pywin32.
platform = win32
passenv = USERNAME
deps =
    {[testenv]deps}
    pywin32
setenv =
    {[testenv]setenv}
